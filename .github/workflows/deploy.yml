# .github/workflows/deploy.yml

name: Build, Scan, Analyze, Test (DAST), and Deploy Weather App

on:
  push:
    branches: [ "main" ] # Adjust branch if needed
  workflow_dispatch:

permissions:
  contents: read    # For checkout, TruffleHog, CodeQL init/analyze
  pages: write      # For GitHub Pages deployment
  id-token: write   # For GitHub Pages deployment
  security-events: write # Required for CodeQL to upload findings
  actions: read     # Required for CodeQL init/analyze

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_and_test: # Renamed job to reflect its broader scope
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scan for secrets with TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          base: ${{ github.event.before }}
          head: HEAD

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build React App
        run: npm run build
        env:
          VITE_OPENWEATHERMAP_API_KEY: ${{ secrets.WEATHER_API_KEY }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # --- Start of DAST Steps ---
      - name: Install simple HTTP server
        run: npm install -g serve # Installs 'serve' globally in the runner

      - name: Start local server for DAST scan
        # Run 'serve' in the background (&) to serve the 'dist' folder on port 8080
        # '-s' flag rewrites all requests to index.html (good for SPAs)
        # Output is redirected to /dev/null to avoid cluttering logs
        run: serve -s dist -l 8080 &> /dev/null &

      - name: Wait for server to be ready
        # Give the server a moment to start up
        run: sleep 5

      - name: Run OWASP ZAP Baseline Scan (DAST)
        uses: zaproxy/action-baseline@v0.11.0 # Pinned version
        with:
          # Target the local server started in the previous step
          target: 'http://localhost:8080/'
          # You can customize the rules or thresholds if needed:
          # cmd_options: '-a -T 5' # Example: include alpha rules, max 5 mins
          # fail_action: true # Default is true, fail the job if alerts are found
          # You might want to specify a rules file later for more control:
          # rules_file_name: '.zap/rules.tsv'
          # Allow INFO alerts, fail on others (useful for static sites)
          cmd_options: "-r report.html -w warn.md -l INFO"
      # --- End of DAST Steps ---

      - name: Setup Pages
        uses: actions/configure-pages@v4
        # This step needs to run even if ZAP finds *only* informational alerts
        # If ZAP fails on higher alerts, the job stops before this anyway.

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
        # This step also needs to run if ZAP finds *only* informational alerts

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test # Depends on the combined build and test job
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4