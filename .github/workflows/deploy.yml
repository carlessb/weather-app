# .github/workflows/deploy.yml

name: Build, Scan, Analyze, Test (DAST), and Deploy Weather App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  security-events: write
  actions: read

env:
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env: # Make REPO_NAME available to steps in this job too
      REPO_NAME: ${{ github.event.repository.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scan for secrets with TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          base: ${{ github.event.before }}
          head: HEAD

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build React App (using repo base path)
        run: npm run build
        env:
          VITE_OPENWEATHERMAP_API_KEY: ${{ secrets.WEATHER_API_KEY }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # --- DAST Steps Adjusted for Base Path ---
      - name: Install simple HTTP server
        run: npm install -g serve

      - name: Recreate structure
        run: |
          mkdir serve_root
          mv dist serve_root/${{ env.REPO_NAME }}

      - name: Start local server for DAST scan
        run: serve -s serve_root -l 8080 &> /dev/null &

      - name: Wait for server to be ready
        run: sleep 5

      - name: Grant write permissions to workspace for ZAP report
        run: chmod -R a+w .

      - name: Run OWASP ZAP Baseline Scan (DAST)
        id: zap_scan
        uses: zaproxy/action-baseline@v0.14.0
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://localhost:8080/${{ env.REPO_NAME }}/'
          cmd_options: "-r report_html -w report_md -l INFO"
          fail_action: false
          allow_issue_writing: false

      - name: Upload ZAP Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zapreport
          path: |
            ./report.html
            ./report.md

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './serve_root/${{ env.REPO_NAME }}'

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4